{
    "projects" : [
        {
            "projectId": 1,
            "name": "SmartShuffle.io",
            "description": "SmartShuffle is a web application that allows Spotify users to create custom radio stations that let users better control how they shuffle music.",
            "timeStart": "July 2020",
            "timeEnd": "October 2020", 
            "bullets": [
                "Each station is made up of many Spotify playlists with individual weights, allowing users to customize exactly how often they hear certain songs.",
                "Full-stack application with Go for the backend API and React for the front-end. Users login with their Spotify account through OAuth, and their stations are saved in a MySQL database.",
                "Self-learned many of the skills needed for the site including launching the service to the public, which taught me valuable information about privacy concerns, scalability, maintenance and more."
            ],
            "link": "https://smartshuffle.io",
            "tags" : [
                "React",
                "Go",
                "AWS",
                "Docker",
                "OAuth"
            ],
            "images" : 
                { 
                    "main": "/images/ssmainss.PNG",
                    "gallery": [
                        "/images/sseditmodalss.PNG",
                        "/images/ssmobiless.PNG",
                        "/images/ssnewplaylistss.PNG",
                        "/images/ssstartss.PNG"
                    ]
                    
                } 
            
        },
        {
            "projectId": 2,
            "name": "Misinformation Escape Room",
            "description": "Online escape room sponsored by the University of Washington Center for an Informed Public (CIP) designed to teach groups of participants about misinformation in a fun and collaborative way.",
            "timeStart": "January 2021",
            "timeEnd": "May 2021", 
            "bullets": [
                "Built in React, it consists of a series of five component based puzzles and a hub where participants can select the next puzzle. The site uses browser storage to save progress.",
                "Added an admin dashboard with d3.js and chart.js visualizations displaying stats for each puzzle",
                "The escape room has been played in libraries across Washington State, and was recently shown off at MozFest 2021"
            ],
            "link": "https://www.lokisloop.org/",
            "tags" : [
                "React"
            ],
            "images" : 
                { 
                    "main": "/images/lokisloopmain.png",
                    "gallery": [
                        "/images/lokisloopdashboard.png",
                        "/images/lokislobby.png"
                    ]
                    
                } 
            
        },
        {
            "projectId": 3,
            "name": "Explore Groups Application",
            "description": "Full-stack web application for UW students (organization restricted google OAuth) to create groups based around an interest - similar to Facebook groups.",
            "timeStart": "October 2020",
            "timeEnd": "December 2020", 
            "bullets": [
                "Implemented group pages, group membership, blog posts, comments (& replies) on group pages and blog posts, group admin tools and more.",
                "Stack consists of a Go back-end, React front-end and AWS for hosting.",
                "Built as a developer in a software team with a project manager, designer and two developers."
            ],
            "tags" : [
                "React",
                "Go",
                "AWS",
                "OAuth",
                "Docker"
            ],
            "images" : 
                { 
                    "main": "/images/groupsmockup.png",
                    "gallery": [
                    ]
                    
                } 
            
        },
        {
            "projectId": 4,
            "name": "Microsoft Malware Detection",
            "description": "Sponsored by a Microsoft Data Scientist; analysis of a large dataset of computers to predict which had malware.",
            "timeStart": "January 2020",
            "timeEnd": "June 2020", 
            "bullets": [
                "Analyzed 8,000,000 computers (100+ variables) to determine which combinations of variables correlated with high malware infection rates.",
                "Designed and implemented a 3rd-normal form database in Microsoft SQL Server and populated the database with the malware dataset.",
                "Created stored procedures to calculate the chance of being infected based on different combinations of variables and looped through probable combinations.",
                "Finalized the project with a PowerBI visualization dashboard to showcase our results."
            ],
            "tags" : [
                "SQL",
                "R"
            ],
            "images" : 
                { 
                    "main": "/images/malwaremain.png",
                    "gallery": [
                    ]
                    
                } 
            
        },
        {
            "projectId": 5,
            "name": "Team Fortress 2 Economic Analysis ",
            "description": "Analysis of the relationship between Team Fortress 2 concurrent player count and item prices.",
            "timeStart": "January 2020",
            "timeEnd": "March 2020", 
            "bullets": [
                "Pricing data was gathered by scraping 94,000 backpack.tf “suggestions” (price changes) using R. The data was put into a small relational database in Microsoft SQL Server and grouped by month to determine the average item price for each month.",
                "Pricing data was then combined with TF2 concurrent player count data from steamcharts.com and a linear regression was done to determine the relationship.",
                "The regression indicated a weak to moderate positive correlation (r = .375, p = 0.03)"
            ],
            "tags" : [
                "R",
                "SQL"
            ],
            "images" : 
                { 
                    "main": "/images/TF2economic.png",
                    "gallery": [
                    ]
                    
                } 
            
        },
        {
            "projectId": 6,
            "name": "Statify",
            "description": "Web application that displays stats of Spotify songs, albums, and playlists.",
            "timeStart": "May 2019",
            "timeEnd": "June 2019", 
            "bullets": [
                "Created using R's shinyapp, the web application uses the Spotify API to display and graph information of the user's choice.",
                "Modules include a playlist stats section that displays the distribution of track tempo, key and length in either a country’s top charts or a custom playlist of the users choice and a section that shows the average tempo, average key and a list of the tracks in the playlist."
            ],
            "link": "https://cahillaw.shinyapps.io/Statify/",
            "tags" : [
                "R"
            ],
            "images" : 
                { 
                    "main": "/images/statifymain.png",
                    "gallery": [
                    ]
                    
                } 
            
        },
        {
            "projectId": 7,
            "name": "Backpack.tf Listing Management Script",
            "description": "Script for backpack.tf (virtual item trading website for the video game Team Fortress 2) that updates my listings.",
            "timeStart": "March 2020",
            "timeEnd": "July 2020", 
            "bullets": [
                "Written in R, the script runs through 1,500 buy listings and uses the backpack.tf API to update my price based on the listings of others.",
                "Allows me to create a low and high price for items I want to buy, and updates my price to beat other buyers within the specified price range every 12 hours.",
                "Hosted on AWS using a RStudio docker container, the script has 24/7 uptime and can be updated from the cloud."
            ],
            "tags" : [
                "R",
                "AWS",
                "Docker"
            ],
            "images" : 
                { 
                    "main": "/images/ocbplistings.png",
                    "gallery": [
                    ]
                    
                } 
            
        },
        {
            "projectId": 8,
            "name": "LettuceEat",
            "description": "Web application that allows users to search for recipes and see nutritional information.",
            "timeStart": "October 2019",
            "timeEnd": "November 2019", 
            "bullets": [
                "Created using React including React Router, HTML and CSS. Uses two APIs, one for recipes and the other for nutritional calculations.",
                "Users can edit recipes and save them to view later. (using local storage) Nutritional information is recalculated based on these changes."
            ],
            "link": "https://team10-challenge9.cameronastor.now.sh/",
            "tags" : [
                "React"
            ],
            "images" : 
                { 
                    "main": "/images/lettuceeat.png",
                    "gallery": [

                    ]
                    
                } 
            
        }
    ]
  }
  